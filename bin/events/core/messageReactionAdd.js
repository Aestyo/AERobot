// √âv√®nement : R√©c√©ption d'une r√©action par le bot
module.exports = async (client, reaction) => {
    const ids = require("../../../config/ids");
    // Partie permettant de r√©cup√©rer une r√©action (partial ou non) et de mettre en cache toutes les informations importantes ( Utilisateur, r√©action, message )
	if (reaction.partial) { // V√©rification de si la r√©action est partial ou non
		try {
			await reaction.fetch();
		} catch (error) {   // Si le message de la r√©action a √©t√© supprim√© cela peut causer une erreure qu'il faut g√©rer
			console.error("Quelque chose s'est mal pass√© dans la r√©cup√©ration de la r√©action : ", error);
			return; // Retourne `reaction.message.author` en tant que undefined/null
		}
	}
    let ReactionEmoji = reaction._emoji.name;
    await reaction.users.fetch();
    let ReactionUser = Array.from(reaction.users.cache.entries());
    let ReactionMessage = reaction.message;

    // Partie troll pour Chlo√©
    for(let i = 0; i < ReactionUser.length; i++){
        if(ReactionUser[i] == ids.cookieID || ReactionEmoji == "üç™"){
            ReactionMessage.channel.send("+1 point sourire pour Chlo√© ! :D");
        }
    }

    // Partie v√©rifiant si c'√©tait int√©ressant de r√©cup√©rer tout √ßa ( Ouai on fait c'qu'on peut hein!)
    



    // d√©bug
    //console.log(ReactionEmoji);
    //console.log(ReactionUser);
    //console.log(ReactionMessage);

    //console.log(`${reaction.message.author}'s message "${reaction.message.content}" gained a reaction!`);
	//console.log(`${reaction.count} user(s) have given the same reaction to this message!`);
};
